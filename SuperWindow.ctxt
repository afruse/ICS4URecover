#BlueJ class context
comment0.target=SuperWindow
comment0.text=\r\n\ A\ draggable\ (and\ lockable)\ window\ that\ can\ hold\ UI\ elements\ (any\ Actors).\r\n\ \r\n\ Instructions\ (0.4)\r\n\ \r\n\ There\ are\ two\ ways\ to\ use\ this\ SuperWindow\ -\ the\ "easy"\ way\ and\ the\ "managed"\ way.\r\n\ \r\n\ If\ you\ are\ only\ going\ to\ use\ it\ to\ frame\ objects\ and\ won't\ be\ moving\ around\ windows,\ use\ the\ easy\ way.\ If\ you\ are\ using\ the\ Easy\ Way,\ \r\n\ set\ paint\ order\ in\ your\ World,\ as\ SuperWindow\ will\ not\ re-order\ anything\ for\ you.\r\n\ \r\n\ The\ Managed\ way\ requires\ more\ overhead\ (setting\ a\ paint\ order,\ setting\ a\ window\ order,\ calling\ the\ init\ method\ after\ doing\ the\ preceeding\ steps).\r\n\ \r\n\ When\ you\ want\ to\ add\ an\ Actor,\ you\ do\ not\ need\ to\ add\ it\ to\ the\ World\ -\ simply\ addObject\ it\ into\ the\ SuperWindow\ and\ it\r\n\ will\ be\ added\ to\ the\ World\ automatically.\ When\ you\ want\ to\ remove\ an\ Actor\ from\ the\ World,\ again\ just\ use\ the\ .removeObject\ class\ \r\n\ on\ your\ SuperWindow\ object.\ Don't\ remove\ from\ the\ World\ directly\ or\ you\ will\ confuse\ the\ SuperWindow.\r\n\ \r\n\ Steps\ to\ set\ up\ the\ "Managed"\ Way\:\r\n\ \r\n\ 1.\ At\ the\ very\ beginning\ of\ your\ World's\ constructor,\ call\ the\ SuperWindow.reset()\ static\ method.\ This\ will\ set\ managed\ status\ to\ false,\r\n\ \ \ \ which\ is\ important\ because\ we\ don't\ want\ any\ "management"\ until\ we\ finish\ the\ rest\ of\ the\ preparation\ steps.\r\n\ \ \ \ \r\n\ 2.\ Continuing\ in\ your\ World's\ constructor,\ set\ a\ Paint\ Order.\ \r\n\ \ \ \ To\ do\ so,\ create\ an\ ArrayList\ of\ Class<>\ and\ pass\ it\ to\ the\ static\ method\ setStaticPaintOrder\ as\ follows\:\r\n\ \ \ \ \ \ //\ \ \ Setup\ Paint\ order\ for\ SuperWindow\r\n\ \ \ \ \ \ ArrayList<Class<?>>\ po\ \=\ new\ ArrayList<Class<?>>();\r\n\ \ \ \ \ \ //\ List\ Layers\ from\ Top\ (drawn\ closest\ to\ player,\ over\ top\ of\ everything\ else)\ to\ Bottom\:\r\n\ \ \ \ \ \ po.add(ShadeBlock.class);\ //\ The\ class\ drawn\ on\ top\r\n\ \ \ \ \ \ po.add(Projectile.class);\r\n\ \ \ \ \ \ po.add(Player.class);\r\n\ \ \ \ \ \ po.add(Item.class);\r\n\ \ \ \ \ \ po.add(Block.class);\ //\ The\ class\ at\ the\ bottom\r\n\ \ \ \ \ \ //\ Any\ classes\ not\ listed\ will\ be\ inserted\ last\ and\ unordered\r\n\ \ \ \ \ \ \ SuperWindow.setStaticPaintOrder(po);\r\n\ \ \ \ \ \ \ \r\n\ 3.\ Continuing\ in\ your\ World's\ constructor,\ create\ your\ actual\ SuperWindow\ objects.\ To\ do\ this,\ check\ out\ the\ API\ and\ call\ the\ constructor\r\n\ \ \ \ that\ fits\ with\ what\ you're\ trying\ to\ do\ with\ your\ Windows.\ Create\ as\ many\ SuperWindows\ as\ you\ intend\ on\ using.\r\n\ \ \ \ \r\n\ 4.\ Still\ in\ the\ World's\ constructor,\ build\ an\ ArrayList\ of\ all\ of\ the\ SuperWindows.\ Note\ that\ the\ order\ that\ you\ put\ them\ in\ will\ be\ the\ default\r\n\ \ \ \ draw\ order.\ The\ draw\ order\ is\ changed\ whenever\ a\ Window\ is\ opened\ or\ drawn,\ so\ this\ draw\ order\ is\ only\ for\ the\ beginning.\ For\ example\:\r\n\ \ \ \ \r\n\ \ \ \ \ \ //\ Setup\ Window\ Order\ for\ SuperWindow\ and\ Initialize\ it\r\n\ \ \ \ \ \ ArrayList<SuperWindow>\ windows\ \=\ new\ ArrayList<SuperWindow>();\r\n\ \ \ \ \ \ windows.add(inventoryWindow);\r\n\ \ \ \ \ \ windows.add(gameWindow);\r\n\ \ \ \ \ \ windows.add(mazeWindow);\r\n\ \r\n\ 5.\ Finally,\ start\ "Managed"\ state\ by\ calling\ the\ static\ initWindowManager\ method\ with\ the\ list\ of\ Windows\ you\ just\ created\:\r\n\ \r\n\ \ \ \ \ \ SuperWindow.initWindowManager(windows);\r\n\ \r\n\ Your\ windows\ should\ now\ work\ as\ intended\!\r\n\ \r\n\ A\ caution\ about\ the\ addedToWorld\ (World\ w)\ method\:\r\n\ --\ SuperWindow\ relies\ on\ a\ workaround\ to\ create\ paint\ orders.\ Put\ simply,\ Greenfoot\ will\ display\r\n\ \ \ \ actors\ in\ the\ order\ in\ which\ they\ are\ added\ (first\ Actor\ added\ ends\ up\ on\ the\ bottom).\ Greenfoot\r\n\ \ \ \ does\ not\ have\ any\ built\ in\ methods\ for\ arranging\ actors\ of\ the\ same\ class\ in\ order.\ So,\ this\r\n\ \ \ \ SuperWindow\ class\ arranges\ Actors\ by\ frequently\ removing\ them,\ sorting\ them\ and\ re-adding\ them\r\n\ \ \ \ to\ the\ World.\ As\ a\ result,\ anything\ you\ put\ into\ your\ addedToWorld(World\ w)\ method\ will\ be\ called\r\n\ \ \ \ repeatedly.\ Make\ sure\ that\ your\ code\ works\ with\ this.\ If\ you\ need\ to\ do\ work\ in\ the\ addedToWorld\r\n\ \ \ \ method\ that\ you\ don't\ want\ repeated,\ consider\ using\ a\ boolean\ or\ null\ object\ check\ to\ avoid\r\n\ \ \ \ repeating\ commands\ in\ an\ unwanted\ manner.\r\n\ \ \ \ \r\n\ \ \ \ In\ short,\ your\ addedToWorld\ (World\ w)\ method\ will\ be\ called\ repeatedly\ if\ you're\ using\ managed\r\n\ \ \ \ Windows,\ draggable\ windows,\ minimized\ windows\ etc.\ Make\ sure\ your\ code\ is\ compatible\ with\ this.\r\n\ \r\n\ Version\ 0.2\ (April\ 2022)\r\n\ -\ Adding\ ability\ to\ draw\ without\ dragbar\r\n\ \r\n\ Version\ 0.3\ (December\ 2022)\r\n\ -\ Height\ and\ width\ are\ now\ canvas\ size,\ not\ total\ size,\ which\ is\ more\r\n\ \ \ intuitive\ (better\ coordinate\ system)\ and\ helped\ me\ fix\ tons\ of\ bugs.\r\n\ \ \ (Some\ previous\ projects\ will\ need\ slight\ adjustment\r\n\ -\ Renamed\ addActor\ to\ addObject\ and\ made\ it's\ signature\ identical\ to\r\n\ \ \ World's\ addObject,\ for\ consistency\r\n\ \r\n\ Version\ 0.4\ (Jan\ 2023)\r\n\ -\ Additional\ Fixes\ to\ various\ contructors\r\n\ -\ Added\ missing\ full\ detail\ (including\ colours)\ contstructor\r\n\ -\ Now\ supports\ background\ textures\ (images)\ for\ windows,\ constrained\ by\ borders,\ compatible\ with\ existing\ feature\ set\r\n\ \ \ (Not\ to\ be\ confused\ with\ a\ full\ size\ Actor,\ which\ builds\ the\ Window\ based\ on\ the\ size\ of\ the\ Actor.\ In\ this\ case,\r\n\ \ \ if\ the\ image\ is\ larger\ than\ the\ bordered\ space,\ it\ will\ get\ cut\ off\ (which\ is\ a\ feature\ -\ so\ you\ can\ use\ a\ large\ texture)\r\n\ \r\n\ \r\n\ @author\ Jordan\ Cohen\ \r\n\ @version\ 0.4\ (January\ 2023)\r\n
comment1.params=width\ height\ title
comment1.target=SuperWindow(int,\ int,\ java.lang.String)
comment1.text=\ \r\n\ Default\ Constructor\ -\ a\ closable,\ minimizable\ window\ that\ can\ be\ dragged\ around\r\n\r\n\ @param\ width\ the\ desired\ width,\ including\ border\r\n\ @param\ height\ the\ desired\ height\ of\ the\ window\ area\ NOT\ including\ drag\ bar\ or\ border\r\n\ @param\ title\ the\ \r\n
comment10.params=
comment10.target=void\ act()
comment11.params=
comment11.target=int\ getWidth()
comment11.text=\r\n\ Returns\ the\ INTERNAL\ width.\ Use\ getTotalWidth()\ to\ get\ the\ width\ including\ the\ borders\r\n\ \r\n\ @return\ int\ \ the\ width\ of\ the\ internal\ canvas\ of\ this\ SuperWindow\r\n
comment12.params=
comment12.target=int\ getTotalWidth()
comment12.text=\r\n\ Returns\ the\ TOTAL\ width,\ including\ the\ borders.\ Use\ getWidth()\ instead\ to\ get\ the\r\n\ internal\ width\ inside\ the\ borders.\r\n\ \r\n\ @return\ int\ \ the\ width\ of\ this\ entire\ window,\ including\ the\ borders\r\n
comment13.params=
comment13.target=int\ getHeight()
comment14.params=
comment14.target=int\ getTotalHeight()
comment15.params=
comment15.target=void\ minimizeButton()
comment16.params=
comment16.target=void\ closeButton()
comment17.params=
comment17.target=void\ updatePositions()
comment17.text=\r\n\ Still\ working\ on\ how\ often\ to\ call\ this\r\n\ \r\n\ Updates\ the\ ActorContent\ contents\ based\ on\ new\ positions\ (because\ otherwise\ they\ were\ saved\ at\ their\ initial\ positions).\r\n\ I'm\ trying\ to\ avoid\ having\ any\ requirements\ to\ call\ this\ from\ outside,\ but\ it's\ public\ so\ it\ can\ be\ called\ however\ you\ prefer.\ \r\n\ This\ should\ be\ called\ after\ movement,\ but\ most\ importantly,\ before\r\n\ any\ Windows\ move\ or\ shift\ or\ change\ draw\ priority.\r\n\ \r\n
comment18.params=ac
comment18.target=void\ pAddObject(ActorContent)
comment18.text=\r\n\ Add\ object,\ but\ don't\ add\ it\ to\ contents\r\n
comment19.params=a\ xx\ yy
comment19.target=void\ addObject(greenfoot.Actor,\ int,\ int)
comment19.text=\r\n\ Add\ a\ new\ object\ to\ this\ window\ at\ relative\ coordinates\ xx,\ yy.\ \r\n\ F\r\n\ If\ this\ is\ done\ in\ a\ managed\ setup,\ it\ triggers\ and\ update\ of\ positions\r\n\ and\ order,\ so\ don't\ do\ this\ too\ many\ times\ per\ act.\ Either\ do\ it\ all\r\n\ at\ the\ beginning,\ or\ do\ it\ gradually.\ \r\n
comment2.params=width\ height\ dragBarHeight\ borderThickness\ title\ flags
comment2.target=SuperWindow(int,\ int,\ int,\ int,\ java.lang.String,\ boolean[])
comment2.text=\r\n\ <p>Create\ a\ SuperWindow.\ Flags\ are\ in\ an\ array\ to\ avoid\ very\ long\ param\ list.</p>\r\n\ \r\n\ <b>flags\:</b>\r\n\ <pre>\r\n\ 0\ -\ closable\ -\ can\ close\r\n\ 1\ -\ locked\ -\ prevent\ movement\r\n\ 2\ -\ Draw\ the\ dragBar\r\n\ 3\ -\ minable\ -\ can\ be\ minimized\r\n\ 4\ -\ spawn\ minimized</pre>\r\n
comment20.params=
comment20.target=void\ removeWindow()
comment21.params=a\ xx\ yy
comment21.target=void\ reAddObject(greenfoot.Actor,\ int,\ int)
comment21.text=\r\n\ The\ actual\ function\ for\ adding\ new\ contents\ to\ the\ Window\r\n
comment22.params=a\ xx\ yy
comment22.target=void\ addObjectOld(greenfoot.Actor,\ int,\ int)
comment23.params=a
comment23.target=void\ removeObject(greenfoot.Actor)
comment24.params=a
comment24.target=void\ removeObject(ActorContent)
comment25.params=width\ height\ dragBarHeight\ backgroundColor\ borderColor\ borderThickness\ title
comment25.target=greenfoot.GreenfootImage\ drawWindow(int,\ int,\ int,\ greenfoot.Color,\ greenfoot.Color,\ int,\ java.lang.String)
comment26.params=
comment26.target=int\ getXOffset()
comment27.params=
comment27.target=int\ getYOffset()
comment28.params=
comment28.target=java.util.ArrayList\ getContents()
comment29.params=currentWindows
comment29.target=void\ initWindowManager(java.util.ArrayList)
comment3.params=width\ height\ dragBarHeight\ borderThickness\ title\ flags\ borderColor\ backgroundColor
comment3.target=SuperWindow(int,\ int,\ int,\ int,\ java.lang.String,\ boolean[],\ greenfoot.Color,\ greenfoot.Color)
comment30.params=paintOrder
comment30.target=void\ setStaticPaintOrder(java.util.ArrayList)
comment31.params=s
comment31.target=void\ sendWindowToFront(SuperWindow)
comment32.params=requester
comment32.target=void\ updateTopWindow(SuperWindow)
comment33.params=
comment33.target=void\ arrangeWindows()
comment34.params=
comment34.target=boolean\ isMinimized()
comment35.params=paintOrder
comment35.target=void\ applyPaintOrder(java.util.ArrayList)
comment36.params=
comment36.target=java.util.ArrayList\ getOrderedContents()
comment37.params=
comment37.target=void\ applyPaintOrder()
comment38.params=
comment38.target=void\ updatePaintOrder()
comment39.params=
comment39.target=void\ applyMinPaintOrder()
comment4.params=fullSizeImage\ dragBarHeight\ borderThickness\ text\ flags
comment4.target=SuperWindow(greenfoot.GreenfootImage,\ int,\ int,\ java.lang.String,\ boolean[])
comment40.params=useStatic
comment40.target=void\ applyPaintOrder(boolean)
comment41.params=
comment41.target=void\ refreshPaintOrder()
comment5.params=fullSizeActor\ dragBarHeight\ borderThickness\ text\ flags
comment5.target=SuperWindow(greenfoot.Actor,\ int,\ int,\ java.lang.String,\ boolean[])
comment5.text=\r\n\ <p>Create\ a\ SuperWindow\ sized\ to\ fit\ around\ an\ Actor.\ This\ is\ useful\ if\ you\ \r\n\ want\ one\ Actor\ to\ take\ up\ all\ of\ the\ space\ within\ a\ SuperWindow.\ For\ example,\r\n\ the\ imageHolder\ object\ in\ the\ Image\ Manipulation\ Project\ where\ the\ Actor\ is\ the\ whole\r\n\ image\ and\ will\ fill\ the\ whole\ Window.</p>\r\n\ \r\n\ <b>flags\:</b>\r\n\ <pre>\r\n\ 0\ -\ closable\ -\ can\ close\r\n\ 1\ -\ locked\ -\ prevent\ movement\r\n\ 2\ -\ Draw\ the\ dragBar\r\n\ 3\ -\ minable\ -\ can\ be\ minimized\r\n\ 4\ -\ spawn\ minimized</pre>\r\n
comment6.params=
comment6.target=void\ reset()
comment7.params=w
comment7.target=void\ addedToWorld(greenfoot.World)
comment8.params=newImage
comment8.target=void\ setFramedImage(greenfoot.GreenfootImage)
comment9.params=
comment9.target=greenfoot.GreenfootImage\ getFramedImage()
numComments=42
